apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: kessel-inventory-consumer
objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: kic-config
    data:
      kic-config.yaml: |
        consumer:
          topics:
          - outbox.event.hbi.hosts
          - host-inventory.hbi.hosts
          retry-options:
            consumer-max-retries: 3
            operation-max-retries: 4
            backoff-factor: 5
          auth:
            enabled: false
        client:
          enabled: true
          url: "kessel-inventory-api:9000"
          enable-oidc-auth: false
          insecure: true
        log:
          level: "info"

  - apiVersion: kafka.strimzi.io/v1beta2
    kind: KafkaConnect
    metadata:
      annotations:
        strimzi.io/use-connector-resources: "true"
      name: kessel-kafka-connect
    spec:
      bootstrapServers: ${ENV_NAME}-kafka-bootstrap:9092
      config:
        config.storage.replication.factor: ${CONFIG_STORAGE_REPLICATION_FACTOR}
        config.storage.topic: kessel-kafka-connect-cluster-configs
        connector.client.config.override.policy: All
        group.id: kessel-kafka-connect-cluster
        offset.storage.replication.factor: ${OFFSET_STORAGE_REPLICATION_FACTOR}
        offset.storage.topic: kessel-kafka-connect-cluster-offsets
        status.storage.replication.factor: ${STATUS_STORAGE_REPLICATION_FACTOR}
        status.storage.topic: kessel-kafka-connect-cluster-status
        config.providers: secrets
        config.providers.secrets.class: io.strimzi.kafka.KubernetesSecretConfigProvider
      image: ${KAFKA_CONNECT_IMAGE}
      replicas: ${{CONNECT_REPLICAS}}
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 250m
          memory: 512Mi
      template:
        pod:
          imagePullSecrets:
          - name: quay-cloudservices-pull
      version: ${VERSION}

  - apiVersion: kafka.strimzi.io/v1beta2
    kind: KafkaConnector
    metadata:
      annotations:
        strimzi.io/use-connector-resources: "true"
      labels:
        strimzi.io/cluster: kessel-kafka-connect
      name: hbi-migration-connector
    spec:
      class: io.debezium.connector.postgresql.PostgresConnector
      config:
        database.dbname: ${secrets:host-inventory-db:db.name}
        database.hostname: ${secrets:host-inventory-db:db.host}
        database.password: ${secrets:host-inventory-db:db.password}
        database.port: ${secrets:host-inventory-db:db.port}
        database.server.name: host-inventory-db
        database.user: ${secrets:host-inventory-db:db.user}
        heartbeat.action.query: SELECT pg_logical_emit_message(false, 'heartbeat', now()::varchar);
        heartbeat.interval.ms: "300000"
        plugin.name: pgoutput
        table.include.list: hbi.hosts
        table.whitelist: hbi.hosts
        topic.heartbeat.prefix: debezium-heartbeat
        topic.prefix: host-inventory
        transforms: unwrap,addMetadata,addHeaders,fieldFilter
        transforms.addHeaders.header: operation
        transforms.addHeaders.type: org.apache.kafka.connect.transforms.InsertHeader
        transforms.addHeaders.value.literal: migration
        transforms.addMetadata.static.field: source_system
        transforms.addMetadata.static.value: host-inventory-db
        transforms.addMetadata.type: org.apache.kafka.connect.transforms.InsertField$Value
        transforms.fieldFilter.exclude: deletion_timestamp,facts,last_check_in,modified_on,per_reporter_staleness,stale_timestamp,stale_warning_timestamp,tags,tags_alt
        transforms.fieldFilter.renames: display_name:hostname,org_id:organization_id
        transforms.fieldFilter.type: org.apache.kafka.connect.transforms.ReplaceField$Value
        transforms.timestampConverter.field: created_on
        transforms.timestampConverter.target.type: unix
        transforms.timestampConverter.type: org.apache.kafka.connect.transforms.TimestampConverter$Value
        transforms.unwrap.delete.handling.mode: rewrite
        transforms.unwrap.drop.tombstones: "false"
        transforms.unwrap.type: io.debezium.transforms.ExtractNewRecordState
      tasksMax: 1

  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: kessel-inventory-consumer
    spec:
      envName: ${ENV_NAME}
      kafkaTopics:
      - topicName: outbox.event.hbi.hosts
        partitions: ${{PARTITIONS}}
        replicas: 3
      - topicName: host-inventory.hbi.hosts
        partitions: ${{PARTITIONS}}
        replicas: 3
      optionalDependencies:
        - kessel-inventory
        - kessel-relations
      deployments:
        - name: service
          replicas: ${{REPLICAS}}
          podSpec:
            image: ${KIC_IMAGE}:${IMAGE_TAG}
            imagePullPolicy: Always
            command: ["inventory-consumer"]
            args: ["start"]
            env:
            - name: CLOWDER_ENABLED
              value: "true"
            - name: INVENTORY_CONSUMER_CONFIG
              value: "/inventory/kic-config.yaml"
            volumeMounts:
                - name: config-volume
                  mountPath: "/inventory"
            volumes:
              - name: config-volume
                configMap:
                  name: kic-config
          webServices:
            public:
              enabled: false

parameters:
  - description: ClowdEnvironment name (ephemeral, stage, prod)
    name: ENV_NAME
    required: true
  - description: App Image
    name: KIC_IMAGE
    value: quay.io/redhat-services-prod/project-kessel-tenant/kessel-inventory-consumer/inventory-consumer
  - description: Image Tag
    name: IMAGE_TAG
    required: true
    value: latest
  - description: Number of replicas
    name: REPLICAS
    value: "1"
  - name: CONFIG_STORAGE_REPLICATION_FACTOR
    description: Replication factor for the topic where connector configurations are stored
    value: "1"
  - name: OFFSET_STORAGE_REPLICATION_FACTOR
    description: Replication factor for the topic where source connector offsets are store
    value: "1"
  - name: STATUS_STORAGE_REPLICATION_FACTOR
    description: Replication factor for the topic where connector and task status are stored
    value: "1"
  - name: KAFKA_CONNECT_IMAGE
    value: "quay.io/anatale/kessel-kafka-connect:latest"
    description: Container image name for the connect cluster pods
    required: true
  - name: CONNECT_REPLICAS
    description: Number of replicas in the connect cluster
    value: "1"
  - name: VERSION
    description: Kafka Connect version to use (should ideally match the Kafka cluster version)
    value: "3.9.0"
  - name: PARTITIONS
    description: Number of partitions to configure for a topic
    value: "1"
